#!/bin/sh

NX=$1
NY=$2
NZ=$3

NPROCS=8
export HOSTFILE="./hostfile"
export MPI=$(which mpirun)
export MPI_BASE_OPTIONS="-np $NPROCS -hostfile $HOSTFILE"
#export MPI_RoCEv2_OPTIONS="-mca btl self -x UCX_TLS=rc,self,sm -x HCOLL_ENABLE_MCAST_ALL=0 -mca coll_hcoll_enable 0 -x UCX_IB_TRAFFIC_CLASS=105 -x UCX_IB_GID_INDEX=3"
export MPI_RoCEv2_OPTIONS=""
#export MPI_Pinning_OPTIONS="--cpu-set 0,2,4,6,8,10,12,14"
export MPI_Pinning_OPTIONS="--use-hwthread-cpus"
export MPI_OPTIONS="$MPI_BASE_OPTIONS $MPI_RoCEv2_OPTIONS $MPI_Pinning_OPTIONS"

echo "Setting up with $NPROCS procs.  Blockmesh size = $NX x $NY x $NZ"

mkdir -p constant/polyMesh
mkdir -p constant/triSurface

sed "s/NX/$NX/g;s/NY/$NY/g;s/NZ/$NZ/g" system/blockMeshDict-mesh.in > constant/polyMesh/blockMeshDict
cp system/decomposeParDict-mesh.in system/decomposeParDict

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# copy motorbike surface from resources directory
cp $FOAM_TUTORIALS/resources/geometry/motorBike.obj.gz constant/triSurface/
runApplication surfaceFeatureExtract

runApplication blockMesh

runApplication decomposePar
#runParallel snappyHexMesh -overwrite
${MPI} ${MPI_OPTIONS} snappyHexMesh -overwrite -parallel >& log.snappyHexMesh

runApplication reconstructParMesh -constant
rm -rf processor*

runApplication renumberMesh -constant -overwrite

